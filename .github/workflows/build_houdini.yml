name: Build USD Asset Resolvers against Houdini

on:
  release:
    types: [released]
  schedule:
      - cron: '0 12 * * *'
  workflow_dispatch:

concurrency:
  group: "build"
  cancel-in-progress: false

jobs:

  build_windows:
    runs-on: windows-2019
    environment: houdini
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      #- name: Switch to latest release tag
      #  run: |
      #    git fetch --all --tags
      #    $latest_release_tag=git tag -l --sort=-version:refname v*
      #    git checkout tags/$latest_release_tag
      - name: Install system packages
        run: |
          pip3 install requests
      - name: Install Houdini
        env:
          SIDEFX_CLIENT_ID: '${{ secrets.SIDEFX_CLIENT_ID }}'
          SIDEFX_CLIENT_SECRET_KEY: '${{ secrets.SIDEFX_CLIENT_SECRET_KEY }}'
        run: |
          python3 .github/scripts/houdini.py --install
      - name: Build USD File Resolver
        run: |
          .\.github\scripts\houdini_build.bat fileResolver
      - name: Build USD Python Resolver
        run: |
          .\.github\scripts\houdini_build.bat pythonResolver
      - name: Create single .zip archive
        run: |
          & python $pwd\.github\scripts\houdini.py --artifact --artifact_src=$pwd\dist --artifact_dst=$pwd\artifacts --artifact_prefix=UsdAssetResolver
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: UsdAssetResolver-Windows
          path: artifacts/*.zip

  deploy:
    runs-on: ubuntu-latest
    permissions: 
      contents: write
    needs: build_windows
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download artifacts Windows
        uses: actions/download-artifact@v3
        with:
          name: UsdAssetResolver-Windows
          path: artifacts
      - name: Upload artifact as release asset
        run: |
          git fetch --all --tags 
          latest_release_tag=$(git tag -l --sort=-version:refname  v* | head -1)
          gh release upload $latest_release_tag artifacts/*.zip --clobber
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}